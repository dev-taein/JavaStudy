package Question201_248;

public class Examp234 {

	public static void main(String[] args) {
//		싱글턴 패턴은 인스턴스가 오직 1개만 생성되야 하는 경우에 사용되는 패턴입니다. 
//		싱글턴 패턴의 공통적인 특징은 private constructor 를 가진다는 것과, static method 를 사용한다는 점입니다.
		
		
//		You want to create a singleton class by using the Singleton design pattern.
//		Which two statements enforce the singleton nature of the design?
//		A. Make the class private.
//		B. Make the constructor equals() and hashCode() methods of the java.lang.Object class.
//		C. Override static reference to point to the single instance. 
//		D. Use a Serializable interface.
//		E.Implement the Serializable interface.
//		
		//이건 답 :: B, C
		
		
//		싱글 톤 디자인 패턴을 사용하여 싱글 톤 클래스를 작성하려고합니다.
//		디자인의 단일 특성을 적용하는 두 문장은 무엇입니까?
//		A. 수업을 비공개로 설정합니다.
//		B. 생성자를 java.lang.Object 클래스의 equals () 및 hashCode () 메소드로 만듭니다.
//		C. 단일 인스턴스를 가리 키도록 정적 참조를 재정의합니다.
//		D. 직렬화 가능 인터페이스를 사용합니다.
//		E. 구현
		
		
		
		
		
		/*	
		//정답
//		B.Make the constructor private.
//		D.Use a static reference to point to the single instance.
https://www.briefmenow.org/oracle/which-two-statements-enforce-the-singleton-nature-of-th/
위 사이트의 답은 :  B, D
A.Make the class static.
B.Make the constructor private.
C.Override equals() and hashCode() methods of the java.lang.Object class.
D.Use a static reference to point to the single instance.
E.Implement the Serializable interface.
------------------------------------------------------------------------------------
E.https://vceguide.com/which-two-statements-enforce-the-singleton-nature-of-the-design/
위 사이트의 답은 B, D
A. Make the class static.
B. Make the constructor private.
C. Override equals() and hashCode() methods of the java.lang.Object class.
D. Use a static reference to point to the single instance.
E. Implement the Serializable interface.
		 */
	}

}
