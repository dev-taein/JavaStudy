키포인트
peek ()는 제공된 Consumer를 실행하고 원본과 동일한 요소가있는 새 스트림을 반환합니다. 대부분의 경우이 방법은 디버깅 목적으로 사용됩니다.

map ()은 제공된 Function을 통해 스트림 요소의 값 또는 유형을 변환하는 데 사용됩니다.

flatMap ()은 스트림의 내용을 다른 (새) 스트림으로 "평탄화"하거나 결합하는 데 사용됩니다. map ()과는 대조적으로 
flatMap ()은 Stream 객체 자체에서 Function을 취합니다. 반면 map ()은 스트림 내의 객체에 대해 Function을 취합니다. map ()과 flatMap ()은 모두 일종의 Stream을 반환합니다.

축소는 많은 요소를 가져 와서 단일 값 또는 개체로 결합 (축소)하는 작업입니다.

reduce ()는 누적 함수, 선택적 ID 및 선택적 결합기 함수를 사용하여 스트림의 요소에 대한 감소를 수행합니다.

collect ()는 변경 가능한 감소라는 유형의 감소를 구현합니다. 여기서 컨테이너 (Collection과 같은)를 사용하여 작업 결과를 누적합니다.

Collectors 클래스는 toList () 및 toMap ()과 같은 정적 메서드를 제공하여 스트림에서 컬렉션 또는 맵을 만들고 averagingInt ()와 같은 일부 계산 메서드를 제공합니다.

Collectors.groupingBy ()는 지정된 Function을 분류 자로 사용하여 스트림의 요소를 그룹화합니다. 다운 스트림 수집기를 수신하여 다른 수준의 분류를 생성 할 수도 있습니다.

Collectors.partitioningBy () 메서드를 사용하여 조건 (Predicate)에 따라 스트림의 요소를 그룹화 (또는 분할) 할 수도 있습니다.