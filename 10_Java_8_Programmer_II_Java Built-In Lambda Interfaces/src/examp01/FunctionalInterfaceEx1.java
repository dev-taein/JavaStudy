package examp01;

public class FunctionalInterfaceEx1 {

	public static void main(String[] args) {
//		 FunctionalInterface = 기능적 인터페이스 = 추상메서드가 1개인 인터페이스
//		새로운 기능 인터페이스는 java.util.function패키지 내부에 있습니다 .
//
//		다섯 가지가 있습니다.
//		Predicate<T>
//		Consumer<T>
//		Function<T, R>
//		Supplier<T>
//		UnaryOperator<T>
		
//		여기서 T와 R은 일반 유형을 나타냅니다 (T는 매개 변수 유형을 나타내고 R은 반환 유형을 나타냄).
		
//		또한 입력 매개 변수가 기본 유형 인 경우에 대한 전문화도 있습니다 (실제로 공급 업체의 경우에는 int, long, double 및 boolean에만 해당됨).
//		IntPredicate
//		LongConsumer
//		BooleanSupplier
		
//		또한 그중 4 개에는 바이너리 버전이 있으므로 하나가 아닌 두 개의 매개 변수를 사용합니다.
//		BiPredicate<L, R>
//		BiConsumer<T, U>
//		BiFunction<T, U, R>
//		BinaryOperator<T>
//		T, U는 일반 매개변수이며 R은 반환타입
		
		
	}

}
